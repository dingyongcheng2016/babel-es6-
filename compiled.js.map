{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AACA,2CAEA;AAFA,+G,CAMA;;AACA,IAAI,IAAI,GAAG,KAAX;AAAA,IAAkB,IAAI,GAAG,OAAzB;AACA,gBAAS,IAAT,2BAA8B,IAA9B,O,CAEA;;AACA,MAAM,CAAC,GAAP,uJ,CAEA;;AACA,MAAM,SAAS,GAAG,MAAI;AAClB,EAAA,OAAO,CAAC,GAAR,yCAAoB,IAApB;AACH,CAFD,C,CAIA;;;AACA,SAAS,QAAT,CAAkB,KAAlB,E,CAEA;;AACA,IAAI,OAAJ;;AAGA,MAAM,CAAC,GAAG,MAAM,CAAE,CAAlB;;AAEA,IAAI,OAAJ;;AAEA,MAAM,IAAN,CAAW","file":"compiled.js","sourcesContent":["// 创建基本的字符串\r\n`This is a pretty little template string.`\r\n\r\n// 多行字符串\r\n`In ES5 this is\r\n not legal.`\r\n\r\n// 插入变量绑定的值\r\nvar name = \"Bob\", time = \"today\";\r\n`Hello ${name}, how are you ${time}?`\r\n\r\n// Unescaped template strings\r\nString.raw`In ES5 \"\\n\" is a line-feed.`\r\n\r\n// 箭头函数\r\nconst getString = ()=>{\r\n    console.log(`我的名字是${name}`)\r\n}\r\n\r\n// string\r\n\"foobar\".includes(\"foo\")\r\n\r\n// new Promise();\r\nnew Promise();\r\n\r\n\r\nconst f = () => {};\r\n\r\nnew Promise();\r\n\r\nclass Test {}\r\n"]}